source ~/.env

## Completion ##

setopt AUTO_LIST
setopt AUTO_MENU
setopt NONOMATCH
setopt COMPLETEINWORD EXTENDEDGLOB

autoload -Uz compinit && compinit
zstyle ':completion:*' menu select
zstyle ':completion:*' list-colors ''



## History ##
HISTFILE=~/.zsh_history 
HISTSIZE=1500 # history items kept internally
SAVEHIST=1500 # history items saved

setopt SHARE_HISTORY # share history between sessions
setopt HIST_FCNTL_LOCK # use OS file locking
setopt HIST_IGNORE_SPACE # Don't record commands entered starting with a space
setopt HIST_IGNORE_DUPS # don't store immediate dups
setopt HIST_NO_STORE # don't store fc/history commands
setopt HIST_REDUCE_BLANKS # canonicalize whitespace
setopt HIST_VERIFY # pause to edit ! item

stty -ixon # Disable flow-control so C-s works


## Prompt ##

autoload -Uz colors && colors
autoload -Uz promptinit && promptinit && prompt bart
PROMPT="%189>..>%{%F{red}%}%n@%m%b%f%k%9(v. . %{%F{blue}%}%(?.[.%20(?.[%U.%S[))%7v%(?.].%20(?.%u].]%s))%b%f%k )%{%F{default}%}%8~%b%f%k%<<%8v%174(l. . %{%F{default}%}%D%b%f%k)%182(l.. %{%F{red}%}%@%b%f%k)%9(v.
%{%F{blue}%}%(?.[.%20(?.[%U.%S[))%7v%(?.].%20(?.%u].]%s))%b%f%k.)
%# "

autoload -z edit-command-line
zle -N edit-command-line
bindkey "^X^E" edit-command-line


## Navigation ##

setopt AUTO_PUSHD
setopt CDABLE_VARS



## Extras ##

autoload -Uz zmv # Batch move and rename 
alias zmv='noglob zmv'



## Custom functions and aliases ##

function gwta () {
	# Create a git worktree under /repo-name.worktrees/ and pushd to it.
	# Expects a bare repo to exist at /repo-name.worktrees/bare-repo.git
	NEW_BRANCH=$1
	EXISTING_BRANCH=${2:-origin/master}
	WORKTREE_ROOT=$(pwd | sed 's/\(^.*\.worktrees\).*/\1/')
	BARE_DIR="${WORKTREE_ROOT}/bare-repo.git"
	if [ -d "${BARE_DIR}" ] 
	then
		pushd "${BARE_DIR}" > /dev/null
		git worktree add -b "$NEW_BRANCH" "${WORKTREE_ROOT}/${NEW_BRANCH}" "$EXISTING_BRANCH" 
		popd > /dev/null
		pushd "${WORKTREE_ROOT}/${NEW_BRANCH}" 
		if [ -d "${WORKTREE_ROOT}/${EXISTING_BRANCH}/node_modules" ]
		then
			ln -s "${WORKTREE_ROOT}/${EXISTING_BRANCH}/node_modules" .
		fi
	else
		echo Cannot find root bare directory
	fi
}
function napropos () {
	npm run | grep $1 -A 1
}
alias nr='npm run'
alias g='git'
alias v='nvim'
alias l='ls'
alias la='ls -A'
alias ll='ls -lAh'
alias readyit='time ( npm run format && npm run lint:ts:fix && npm run test:all ) ; say -v Karen task finished'
alias testit='time npm run test:all; say -v Karen task finished'
alias format='time ( npm run format && npm run lint:ts:fix ) ; say -v Karen task finished'

export RIPGREP_CONFIG_PATH="${HOME}/.ripgreprc"


# Change directory to what Finder is looking at:
# Via https://twitter.com/QuinnyPig/status/1473112091808591874
cdf() {
    target=`osascript -e 'tell application "Finder" to get POSIX path of (target of front Finder window as text)'`
    cd "$target"
}
