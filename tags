!_TAG_EXTRA_DESCRIPTION	anonymous	/Include tags for non-named objects like lambda/
!_TAG_EXTRA_DESCRIPTION	fileScope	/Include tags of file scope/
!_TAG_EXTRA_DESCRIPTION	pseudo	/Include pseudo tags/
!_TAG_EXTRA_DESCRIPTION	subparser	/Include tags generated by subparsers/
!_TAG_FIELD_DESCRIPTION	epoch	/the last modified time of the input file (only for F\/file kind tag)/
!_TAG_FIELD_DESCRIPTION	file	/File-restricted scoping/
!_TAG_FIELD_DESCRIPTION	input	/input file/
!_TAG_FIELD_DESCRIPTION	name	/tag name/
!_TAG_FIELD_DESCRIPTION	pattern	/pattern/
!_TAG_FIELD_DESCRIPTION	typeref	/Type and name of a variable or typedef/
!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_KIND_DESCRIPTION!JavaScript	C,constant	/constants/
!_TAG_KIND_DESCRIPTION!JavaScript	G,getter	/getters/
!_TAG_KIND_DESCRIPTION!JavaScript	M,field	/fields/
!_TAG_KIND_DESCRIPTION!JavaScript	S,setter	/setters/
!_TAG_KIND_DESCRIPTION!JavaScript	c,class	/classes/
!_TAG_KIND_DESCRIPTION!JavaScript	f,function	/functions/
!_TAG_KIND_DESCRIPTION!JavaScript	g,generator	/generators/
!_TAG_KIND_DESCRIPTION!JavaScript	m,method	/methods/
!_TAG_KIND_DESCRIPTION!JavaScript	p,property	/properties/
!_TAG_KIND_DESCRIPTION!JavaScript	v,variable	/global variables/
!_TAG_KIND_DESCRIPTION!Sh	a,alias	/aliases/
!_TAG_KIND_DESCRIPTION!Sh	f,function	/functions/
!_TAG_KIND_DESCRIPTION!Sh	h,heredoc	/label for here document/
!_TAG_KIND_DESCRIPTION!Sh	s,script	/script files/
!_TAG_KIND_DESCRIPTION!Vim	C,constant	/constant definitions/
!_TAG_KIND_DESCRIPTION!Vim	a,augroup	/autocommand groups/
!_TAG_KIND_DESCRIPTION!Vim	c,command	/user-defined commands/
!_TAG_KIND_DESCRIPTION!Vim	f,function	/function definitions/
!_TAG_KIND_DESCRIPTION!Vim	m,map	/maps/
!_TAG_KIND_DESCRIPTION!Vim	n,filename	/vimball filename/
!_TAG_KIND_DESCRIPTION!Vim	v,variable	/variable definitions/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_OUTPUT_VERSION	0.0	/current.age/
!_TAG_PARSER_VERSION!JavaScript	0.0	/current.age/
!_TAG_PARSER_VERSION!Sh	0.0	/current.age/
!_TAG_PARSER_VERSION!Vim	0.0	/current.age/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/Users/j/code-personal/dot-files/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	6.0.0	//
!_TAG_ROLE_DESCRIPTION!Sh!heredoc	endmarker	/end marker/
!_TAG_ROLE_DESCRIPTION!Sh!script	loaded	/loaded/
-	vimrc	/^nnoremap - :Explore<CR>$/;"	m
<leader>Y	vimrc	/^nnoremap <leader>Y gg"+yG$/;"	m
<leader>d	vimrc	/^nnoremap <leader>d "_d$/;"	m
<leader>d	vimrc	/^vnoremap <leader>d "_d$/;"	m
<leader>fb	nvim/init.vim	/^nnoremap <leader>fb <cmd>lua require('telescope.builtin').buffers()<cr>$/;"	m
<leader>ff	nvim/init.vim	/^nnoremap <leader>ff <cmd>lua require('telescope.builtin').find_files({ hidden = true })<cr>$/;"	m
<leader>fg	nvim/init.vim	/^nnoremap <leader>fg <cmd>lua require('telescope.builtin').live_grep()<cr>$/;"	m
<leader>fh	nvim/init.vim	/^nnoremap <leader>fh <cmd>lua require('telescope.builtin').help_tags()<cr>$/;"	m
<leader>ft	nvim/init.vim	/^nnoremap <leader>ft :Telescope<CR>$/;"	m
<leader>fvc	nvim/init.vim	/^nnoremap <leader>fvc <cmd>lua require('telescope.builtin').commands()<cr>$/;"	m
<leader>gb	nvim/init.vim	/^nnoremap <leader>gb <cmd>lua require('telescope.builtin').git_branches()<cr>$/;"	m
<leader>gg	vimrc	/^nnoremap <leader>gg :Git<CR>$/;"	m
<leader>gs	nvim/init.vim	/^nnoremap <leader>gs <cmd>lua require('telescope.builtin').git_status()<cr>$/;"	m
<leader>gv	vimrc	/^nnoremap <leader>gv :GV<CR>$/;"	m
<leader>p	vimrc	/^vnoremap <leader>p "_dP$/;"	m
<leader>vnv	vimrc	/^nmap <leader>vnv :e $MYVIMRC<CR>$/;"	m
<leader>vrc	vimrc	/^nmap <leader>vrc :e ~\/.vimrc<CR>$/;"	m
<leader>wl	vimrc	/^nnoremap <leader>wl :ls<CR>:b<space>$/;"	m
<leader>wp	vimrc	/^nmap <leader>wp :call WPComTrunkSaveSendAndTest()<CR>$/;"	m
<leader>wq	vimrc	/^nnoremap <leader>wq :q<CR>$/;"	m
<leader>ww	vimrc	/^nnoremap <leader>ww :w<CR>$/;"	m
<leader>y	vimrc	/^nnoremap <leader>y "+y$/;"	m
<leader>y	vimrc	/^vnoremap <leader>y "+y$/;"	m
ALEToggleFixer	vimrc	/^command! ALEToggleFixer execute "let g:ale_fix_on_save = get(g:, 'ale_fix_on_save', 0) ? 0 : 1 |/;"	c
CssToJs	vimrc	/^command! -range CssToJs <line1>,<line2>call CssToJs()$/;"	c
CssToJs	vimrc	/^function! CssToJs() range$/;"	f
EOF	setup.sh	/^	cat <<EOF > ~\/Library\/LaunchAgents\/me.scjr.CapslockToCtrl.plist$/;"	h
J	vimrc	/^vnoremap J :m '>+1<CR>gv=gv$/;"	m
K	vimrc	/^vnoremap K :m '<-2<CR>gv=gv$/;"	m
SqlToDataFrameT	vimrc	/^command! -range SqlToDataFrameT <line1>,<line2>call SqlToDataFrameT()$/;"	c
SqlToDataFrameT	vimrc	/^function! SqlToDataFrameT() range$/;"	f
SyncSystemColorScheme	vimrc	/^function! SyncSystemColorScheme(...)$/;"	f
WPCom	vimrc	/^command! WPCom call WPComTrunkSaveSendAndTest()$/;"	c
WPComTrunkSaveSendAndTest	vimrc	/^function! WPComTrunkSaveSendAndTest()$/;"	f
data_dir	vimrc	/^let data_dir = '~\/.vim'$/;"	v
g:airline#extensions#ale#enabled	vimrc	/^let g:airline#extensions#ale#enabled = 1$/;"	v
g:ale_fix_on_save	vimrc	/^let g:ale_fix_on_save = 0$/;"	v
g:ale_fixers	vimrc	/^let g:ale_fixers = {$/;"	v
g:ale_javascript_prettier_use_local_config	vimrc	/^let g:ale_javascript_prettier_use_local_config = 1$/;"	v
g:ale_lint_on_insert_leave	vimrc	/^let g:ale_lint_on_insert_leave = 0$/;"	v
g:ale_lint_on_save	vimrc	/^let g:ale_lint_on_save = 1$/;"	v
g:ale_lint_on_text_changed	vimrc	/^let g:ale_lint_on_text_changed = 'never'$/;"	v
g:ale_linter_aliases	vimrc	/^let g:ale_linter_aliases = {'pandoc': ['markdown']}$/;"	v
g:ale_linters	vimrc	/^let g:ale_linters = {$/;"	v
g:ale_php_phpcbf_use_global	vimrc	/^let g:ale_php_phpcbf_use_global = 1$/;"	v
g:ale_php_phpcs_use_global	vimrc	/^let g:ale_php_phpcs_use_global = 1$/;"	v
g:bookmark_save_per_working_dir	vimrc	/^let g:bookmark_save_per_working_dir = 1$/;"	v
g:bookmark_sign	vimrc	/^let g:bookmark_sign = 'â™¥'$/;"	v
g:goyo_width	vimrc	/^let g:goyo_width=130$/;"	v
g:lightline	vimrc	/^let g:lightline = {$/;"	v
g:netrw_banner	vimrc	/^let g:netrw_banner = 0$/;"	v
mapleader	vimrc	/^let mapleader = ' '$/;"	v
myvimrchooks	vimrc	/^  augroup myvimrchooks$/;"	a
yof	vimrc	/^nnoremap yof :ALEToggleFixer<cr>$/;"	m
